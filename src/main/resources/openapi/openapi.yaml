openapi: 3.0.4

info:
  title: E-Commerce API
  version: 0.0.1
  description: API for ecommerce price management.
  contact:
    email: martin.yanez.corti@kairosds.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

tags:
  - name: Price
    description: Manage and retrieve product prices

paths:
  /brands/{brandId}/products/{productId}/prices:
    get:
      summary: Get the applicable price for a product on a specific date
      description: |
        Returns the applicable price with the highest priority for a given product and brand at a specific date.
      tags:
        - Price
      operationId: getProductPriceByDate
      parameters:
        - name: brandId
          in: path
          description: ID of the brand the product belongs to
          required: true
          schema:
            type: integer
            format: int64
        - name: productId
          in: path
          description: ID of the product to return
          required: true
          schema:
            type: integer
            format: int64
        - name: applicationDate
          in: query
          description: Date for which to retrieve the product price (e.g. `2020-06-14T14:00:00Z`)
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Price'
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Price with given arguments not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Price:
      type: object
      required:
        - productId
        - brandId
        - tariffId
        - startDate
        - endDate
        - price
        - currency
      properties:
        productId:
          type: integer
          format: int64
          example: 35455
        brandId:
          type: integer
          format: int64
          example: 1
        tariffId:
          type: integer
          format: int64
          example: 2
        startDate:
          type: string
          format: date-time
          example: 2020-06-14T15:00:00Z
        endDate:
          type: string
          format: date-time
          example: 2020-06-14T18:30:00Z
        price:
          type: number
          format: float
          example: 25.45
        currency:
          type: string
          example: EUR

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: PRICE_NOT_FOUND
        message:
          type: string
          example: No price found for given brand/product/date